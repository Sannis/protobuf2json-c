language: c
compiler:
  - gcc
  - clang
os:
  - linux
  - osx
env:
  -
  - MY_SANITIZE=address
  - MY_SANITIZE=undefined
  - MY_SANITIZE=integer
  - MY_VALGRIND=1
  - MY_COVERAGE=1
matrix:
  exclude:
    # Pairs because of some comilers does not support some features at all
    - compiler: gcc
      env: MY_SANITIZE=address
    - compiler: gcc
      env: MY_SANITIZE=undefined
    - compiler: gcc
      env: MY_SANITIZE=integer
    - compiler: clang
      env: MY_VALGRIND=1
    - compiler: clang
      env: MY_COVERAGE=1
    # OS-dependent features
    - os: osx
      compiler: clang
      env: MY_SANITIZE=address
    - os: osx
      compiler: clang
      env: MY_SANITIZE=undefined
    - os: osx
      compiler: clang
      env: MY_SANITIZE=integer
    - os: osx
      compiler: gcc
      env: MY_VALGRIND=1
    - os: osx
      compiler: gcc
      env: MY_COVERAGE=1
before_install:
  - ./.travis.before_install.sh
install:
  - ./autogen.sh
  - ./configure
  - if [ "x$MY_SANITIZE" != "x" ]; then ./configure --enable-my-sanitize=$MY_SANITIZE; fi
  - if [ "x$MY_VALGRIND" = "x1" ]; then ./configure --enable-my-valgrind; fi
  - if [ "x$MY_COVERAGE" = "x1" ]; then ./configure --enable-my-coverage; fi
  - make
script:
  - make cppcheck
  - make test
  - make benchmark
after_success:
  - if [ "x$MY_COVERAGE" = "x1" ]; then cpp-coveralls --build-root src --exclude test/ --exclude include/ --exclude src/.libs --gcov-options '\-lp'; fi
